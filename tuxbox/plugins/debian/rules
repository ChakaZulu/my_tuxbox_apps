#!/usr/bin/make -f

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# This is the debhelper compatibility version to use.
export DH_COMPAT=3

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_ARCH       ?= $(shell dpkg-architecture -qDEB_HOST_ARCH)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

VERSION = $(shell dpkg-parsechangelog | grep ^Version: | cut -d ' ' -f 2)
ifneq (,$(findstring debug,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -g
endif
ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
	INSTALL_PROGRAM += -s
endif

CC = gcc-3.2
CXX = g++-3.2

CXXFLAGS = $(CFLAGS)
export CC CXX CFLAGS CXXFLAGS INSTALL_PROGRAM

PACKAGES = $(shell dh_listpackages -a)
VERSION = $(shell dpkg-parsechangelog | grep ^Version: | cut -d ' ' -f 2)

build/config.status:
	dh_testdir

	-mkdir build
	cd build && \
	../configure \
		--host=$(DEB_HOST_GNU_TYPE) \
		--build=$(DEB_BUILD_GNU_TYPE) \
		--prefix=/usr \
		--mandir=\$${prefix}/share/man \
		--infodir=\$${prefix}/share/info

build: build-stamp
build-stamp: build/config.status
	dh_testdir

	$(MAKE) -C build

	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp

	-rm -rf build

	-test -r /usr/share/misc/config.sub && \
	  cp -f /usr/share/misc/config.sub config.sub
	-test -r /usr/share/misc/config.guess && \
	  cp -f /usr/share/misc/config.guess config.guess

	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

	$(MAKE) -C build install prefix=$(CURDIR)/debian/tmp/usr

	dh_movefiles


# Build architecture-independent files here.
binary-indep: build install
	dh_testdir -i
	dh_testroot -i
#	dh_installdebconf -i	
	dh_installdocs -i
#	dh_installexamples -i
#	dh_installmenu -i
#	dh_installlogrotate -i 
#	dh_installemacsen -i
#	dh_installpam -i 
#	dh_installmime -i
#	dh_installinit -i
#	dh_installcron -i
#	dh_installman -i
#	dh_installinfo -i
#	dh_undocumented -i
	dh_installchangelogs -i
	dh_link -i
	dh_strip -i
	dh_compress -i
	dh_fixperms -i
	dh_makeshlibs -i
	dh_installdeb -i
#	dh_perl -i
	dh_shlibdeps -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir -a
	dh_testroot -a
#	dh_installdebconf -a	
#	dh_installdocs -a
#	dh_installexamples -a
#	dh_installmenu -a
#	dh_installlogrotate -a 
#	dh_installemacsen -a
#	dh_installpam -a 
#	dh_installmime -a
#	dh_installinit -a
#	dh_installcron -a
#	dh_installman -a
#	dh_installinfo -a
#	dh_undocumented -a
#	dh_installchangelogs -a
	dh_link -a
	dh_strip -a
	dh_compress -a
	dh_fixperms -a
	dh_makeshlibs -a
	dh_installdeb -a
#	dh_perl -a
	dh_shlibdeps -a
	dh_gencontrol -a -- -fdebian/files~
#	dh_md5sums -a
#	dh_builddeb -a
	$(foreach PACKAGE, $(PACKAGES), \
	( dpkg-distaddfile $(PACKAGE)_$(VERSION)_$(DEB_HOST_ARCH).udeb tuxbox-image optional ) ; )
	$(foreach PACKAGE, $(PACKAGES), \
	( dh_builddeb -p$(PACKAGE) --filename=$(PACKAGE)_$(VERSION)_$(DEB_HOST_ARCH).udeb ) ; )

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure
